#include <behaviors.dtsi> 
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#include "adv360pro_keypos.h"
#include "zmk_helper.h"

/* definitions for mouse layer */
#include "mouse.h"
#define ___ &trans

/* Layer references  */
#define QWERTY 0
#define NUM 1
#define SYM 2
#define FN 3
#define MOD 4
#define MS 5
#define NAV 6

/* Global settings */
#include "general.h"

/* Home row mods */
#include "homerow_mods.h"

/* Macros and shortcuts */
#include "custom_behaviors.h"

/ {
    /* remove unused keys from layout and move thumb cluster to bottom */
    chosen {
        zmk,matrix_transform = &urobs_transform;
    };

    keymap {
        compatible = "zmk,keymap";

 // qwerty 
        qwerty_layer {
            bindings = <
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮  ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            ___           ___           ___           ___           ___            ___              ___            ___           ___           ___           ___           ___            ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯  ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮  ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            &kp Q         &kp W         &kp E         &kp R         &kp T          ___              ___            &kp Y         &kp U         &kp I         &kp O         &kp P          &kp BSLH
// ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤  ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤
     ___            &hml LGUI A  &hml LALT S   &hml LCTRL D   &hml LSHFT F  &kp G          ___              ___            &kp H         &hmr RSHFT J  &hmr RCTRL K   &hmr RALT L  &hmr RGUI SEMI &kp SQT
// ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤╰─────────────╯  ╰─────────────╯├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤
     ___            &kp Z         &kp X         &kp C         &kp V         &kp B                                          &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH       ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯                                ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────╮                                                            ╭─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            ___           ___           ___           ___                                                                        ___           ___           ___           ___            ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────╯╭─────────────┬─────────────╮  ╭─────────────┬─────────────╮╰─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
                                                                             &mo NAV       &caps_dance      &num_word     &mo MS
//                                                           ╭─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────╮
                                                               BSPC_SYM      SHFT_NUM      &lt MS HOME      &kp END       SPC_NAV       RET_HYP
//                                                           │             │             ├─────────────┤  ├─────────────┤             │             │
                                                                                           &lt MS TAB       &lt FN ESC
//                                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
            >;
        };


        num_layer {
            bindings = <
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮  ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            ___           ___           ___           ___           ___             ___              ___            ___          ___           ___           ___           ___            ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯  ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮  ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            &kp HASH      &kp LT        &kp GT        &kp EXCL      ___             ___              ___            &mbrc        &kp N7        &kp N8        &kp N9        ___            ___
// ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤  ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤
     ___            SYM_CARET     SYM_MINUS     SYM_PLUS      SYM_EQUAL     &kp PERCENT     ___              ___            &mbkt        &kp N4        &kp N5        &kp N6        SYM_DOLLAR     ___
// ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤╰─────────────╯  ╰─────────────╯├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤
     &num_word      &kp BSLH      &kp STAR      &kp COMMA     &kp DOT       ___                                             &mpar        &kp N1        &kp N2        &kp N3        &kp FSLH       ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯                                ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────╮                                                            ╭─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            ___           ___           ___           ___                                                                        ___           ___           ___           ___            ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────╯╭─────────────┬─────────────╮  ╭─────────────┬─────────────╮╰─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
                                                                             ___           ___              ___           ___
//                                                           ╭─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────╮
                                                               ___           ___           ___              ___           &comma_dance  &kp N0
//                                                           │             │             ├─────────────┤  ├─────────────┤             │             │
                                                                                           ___              ___
//                                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        sym_layer {
          bindings = <
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮  ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PRCNT      ___              ___            &kp CARET     &kp AMPS      &kp STAR      ___           ___            ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯  ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮  ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            &kp HASH      &kp LT        &kp GT        &kp EXCL      ___            ___              ___            &mbrc         &kp LBRC      &kp RBRC      &kp GRAVE     &msqt_morph    ___
// ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤  ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤
     ___            SYM_CARET     SYM_MINUS     SYM_PLUS      SYM_EQUAL     &kp PRCNT      ___              ___            &mbkt         SYM_LBKT      SYM_RBKT      SYM_AT        SYM_DOLLAR     ___
// ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤╰─────────────╯  ╰─────────────╯├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤
     ___            &kp BSLH      &kp STAR      &kp PIPE      &kp AMPS      &kp TILDE                                      &mpar         &kp LPAR      &kp RPAR      ___           &kp FSLH       ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯                                ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────╮                                                            ╭─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            ___           ___           ___           ___                                                                        &kp LT        &kp GT        ___           ___            ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────╯╭─────────────┬─────────────╮  ╭─────────────┬─────────────╮╰─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
                                                                             ___           ___              ___           ___
//                                                           ╭─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────╮
                                                               ___           ___           ___              ___           &kp UNDER     &key_repeat
//                                                           │             │             ├─────────────┤  ├─────────────┤             │             │
                                                                                           ___              ___
//                                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        fn_layer {
            bindings = <
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮  ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     &kp F1         &kp F2        &kp F3        &kp F4        &kp F5        &kp F6         ___              ___            &kp F7        &kp F8        &kp F9        &kp F10       &kp F11        &kp F12
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯  ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮  ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            ___           ___           ___           ___           ___            ___              ___            ___           &kp F7        &kp F8        &kp F9        &kp F10        ___
// ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤  ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤
     ___            ___           ___           ___           ___           ___            ___              ___            ___           &kp F4        &kp F5        &kp F6        &kp F11        ___
// ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤╰─────────────╯  ╰─────────────╯├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤
     ___            ___           ___           ___           ___           ___                                            ___           &kp F1        &kp F2        &kp F3        &kp F12        ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯                                ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────╮                                                            ╭─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            ___           ___           ___           ___                                                                        ___           ___           ___           ___            ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────╯╭─────────────┬─────────────╮  ╭─────────────┬─────────────╮╰─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
                                                                             ___           ___              ___           ___
//                                                           ╭─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────╮
                                                               &kp C_BRI_DN  &kp C_BRI_UP  ___              ___           ___           ___
//                                                           │             │             ├─────────────┤  ├─────────────┤             │             │
                                                                                           LOCK_SCRN        ___
//                                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        mod_layer {
            bindings = <
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮  ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            BT_0          BT_1          BT_2          BT_3          BT_4           ___              ___            BT_0          BT_1          BT_2          BT_3          BT_4           ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯  ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮  ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            ___           &kp C_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  ___            ___              ___            ___           ___           ___           ___           ___            ___
// ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤  ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤
     ___            ___           &kp C_PREV    &kp C_PP      &kp C_NEXT    ___            ___              ___            ___           ___           ___           ___           ___            ___
// ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤╰─────────────╯  ╰─────────────╯├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤
     ___            BT_0          BT_1          BT_2          BT_3          BT_4                                           ___           ___           ___           ___           ___            ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯                                ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────╮                                                            ╭─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            ___           ___           ___           ___                                                                        &bl BL_DEC    &bl BL_INC    ___           ___            ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────╯╭─────────────┬─────────────╮  ╭─────────────┬─────────────╮╰─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
                                                                             &bootloader   ___              ___           &bootloader
//                                                           ╭─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────╮
                                                               &bl BL_DEC    &bl BL_INC    &bt BT_CLR       &bt BT_CLR    &kp C_PP      &kp C_MUTE
//                                                           │             │             ├─────────────┤  ├─────────────┤             │             │
                                                                                           &bl BL_TOG      ___
//                                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        mouse_layer {
            bindings = <
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮  ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            ___           ___           ___           ___           ___            ___              ___            ___           ___           ___           ___           ___            ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯  ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮  ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            &kp LG(Q)     &kp LG(W)     Q_F           Q_P           Q_B            ___              ___            CMD_PASTE     U_WH_U        U_WH_D        COPY_CUT      CMD_UNDO       ___
// ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤  ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤
     ___            &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     Q_G            ___              ___            U_MS_L        U_MS_D        U_MS_U        U_MS_R        CMD_REDO       ___
// ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤╰─────────────╯  ╰─────────────╯├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤
     &kp ENTER      Q_Z           Q_X           Q_C           Q_C           Q_V                                            ___           U_WH_R        U_WH_L        ___           ___            ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯                                ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────╮                                                            ╭─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            ___           ___           ___           ___                                                                        ___           ___           ___           ___            ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────╯╭─────────────┬─────────────╮  ╭─────────────┬─────────────╮╰─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
                                                                             ___           ___              ___            U_BTN3
//                                                           ╭─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────╮
                                                               ___           ___           ___              ___            U_BTN1        U_BTN2
//                                                           │             │             ├─────────────┤  ├─────────────┤             │             │
                                                                                           ___              U_BTN3
//                                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        nav_layer {
            bindings = <
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮  ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            ___           ___           ___           ___           ___            ___              ___            ___           ___           ___           ___           ___            ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯  ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮  ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            SPC_UNDO      SPC_LEFT      SPC_UP        SPC_DOWN      SPC_RIGHT      SPC_MVL          ___            CMD_PASTE     &kp PG_DN     &kp PG_UP     COPY_CUT      CMD_UNDO       ___
// ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤  ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤
     ___            &sk LGUI      &sk LALT      &sk LCTRL     &sk LSHFT     SPC_FULL       SPC_MVR          ___            &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     CMD_REDO       ___
// ├─────────────┤├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤╰─────────────╯  ╰─────────────╯├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤├─────────────┤
     PREV_TAB       PREV_WINDOW   NEXT_WINDOW   SWAP_PREV     SWAPPER       ___                                            &kp LS(TAB)   &kp TAB       &kp ESC       ___           ___            NEXT_TAB
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯                                ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
// ╭─────────────╮╭─────────────┬─────────────┬─────────────┬─────────────╮                                                            ╭─────────────┬─────────────┬─────────────┬─────────────╮╭─────────────╮
     ___            ___           ___           ___           ___                                                                        ___           ___           ___           ___            ___
// ╰─────────────╯╰─────────────┴─────────────┴─────────────┴─────────────╯╭─────────────┬─────────────╮  ╭─────────────┬─────────────╮╰─────────────┴─────────────┴─────────────┴─────────────╯╰─────────────╯
                                                                             ___           ___              ___           ___
//                                                           ╭─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────╮
                                                               &kp BSPC      &kp ENTER     ___              ___           ___           ___
//                                                           │             │             ├─────────────┤  ├─────────────┤             │             │
                                                                                           ___              ___
//                                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
            >;
        };

    };



};

/* combos */
#undef COMBO_HOOK
#define COMBO_HOOK global-quick-tap-ms = <100>;

#define COMBO_TERM_FAST 20
#define COMBO_TERM_SLOW 35

// make homerow combos tap-only (so HRMs can be chorded instantaneously)
#define HRC_TAB    &hml         LA(LCTRL) TAB
#define HRC_REPEAT &hml_repeat  LS(LCTRL) 0
#define HRC_DOT   &hmr_dot_lt RS(LCTRL) 0
#define HRC_COMMA   &hmr_comma_gt LA(LCTRL) 0

/* Horizontal combos - left hand */

ZMK_COMBO(esc,   &kp ESC,       LT3 LT2,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)						

ZMK_COMBO(space, &kp SPACE,     LB3 LB2      DEF NAV NUM, COMBO_TERM_FAST)
ZMK_COMBO(ret,   &kp RETURN,    LB2 LB1,     DEF NAV NUM, COMBO_TERM_FAST)
ZMK_COMBO(mouse, &smart_mouse,  LB3 LB1,     DEF NAV NUM, COMBO_TERM_SLOW)

// ZMK_COMBO(tab,   HRC_TAB,       LM3 LM2,     DEF NAV NUM, COMBO_TERM_FAST)
// ZMK_COMBO(repeat,HRC_REPEAT,    LM2 LM1,     DEF NAV NUM, COMBO_TERM_FAST)

ZMK_COMBO(cut,   &kp LC(X),     LT3 LT1,     DEF NAV NUM, COMBO_TERM_SLOW)
ZMK_COMBO(copy,  &kp LC(INS),   LT3 LT2,     DEF NAV NUM, COMBO_TERM_FAST)
ZMK_COMBO(paste, &kp LS(INS),   LT2 LT1,     DEF NAV NUM, COMBO_TERM_FAST)

/* Horizontal combos - right hand */
ZMK_COMBO(del,   &kp DEL,       RB1 RB2,     DEF NAV NUM, COMBO_TERM_FAST)
ZMK_COMBO(bspc,  &kp BSPC,      RB2 RB3,     DEF NAV NUM, COMBO_TERM_FAST)

// ZMK_COMBO(dot,   &kp DOT,       RM1 RM2,     DEF     NUM, COMBO_TERM_FAST)
// ZMK_COMBO(colon, &kp COLON,     RM2 RM3,     DEF     NUM, COMBO_TERM_FAST)
// ZMK_COMBO(lt,    &kp LT,        RM1 RM2,         NAV    , COMBO_TERM_FAST)
// ZMK_COMBO(gt,    &kp GT,        RM2 RM3,         NAV    , COMBO_TERM_FAST)

ZMK_COMBO(qmark, &kp QMARK,     RT1 RT2,     DEF     NUM, COMBO_TERM_FAST)
ZMK_COMBO(excl,  &kp EXCL,      RT2 RT3,     DEF     NUM, COMBO_TERM_FAST)
ZMK_COMBO(lbrc,  &kp LBRC,      RT1 RT2,         NAV    , COMBO_TERM_FAST)
ZMK_COMBO(rbrc,  &kp RBRC,      RT2 RT3,         NAV    , COMBO_TERM_FAST)

ZMK_COMBO(grk,   &sl UC,        RT1 RT3,     DEF NAV NUM, COMBO_TERM_SLOW)
ZMK_COMBO(cpgrk, &sls 0,        RT1 RT2 RT3, DEF NAV NUM, COMBO_TERM_SLOW)
